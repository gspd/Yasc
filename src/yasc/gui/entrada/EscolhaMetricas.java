package yasc.gui.entrada;

import yasc.Main;
import javax.swing.JOptionPane;

public class EscolhaMetricas extends javax.swing.JFrame {

    String stringCaminho;

    public EscolhaMetricas(String caminho) {
        this.stringCaminho = caminho;
        initComponents();
        jTextFieldQueueAvg.setEnabled(false);
        jTextFieldServiceAvg.setEnabled(false);
        if (!ListasArmazenamento.isFalha()) {
            jCheckBoxPerda.setEnabled(false);
        }
        jTextFieldEvento.setText(ListasArmazenamento.getEvent());
        if (ListasArmazenamento.isPerda()) {
            jCheckBoxPerda.setSelected(true);
        }
        if (ListasArmazenamento.isFila()) {
            jCheckBoxQueueAvg.setSelected(true);
            jTextFieldQueueAvg.setText(ListasArmazenamento.getFilaMet());
        }
        else{
            jTextFieldQueueAvg.setEnabled(false);
        }
        if (ListasArmazenamento.isAtendimento()) {
            jCheckBoxServiceAvg.setSelected(true);
            jTextFieldServiceAvg.setText(ListasArmazenamento.getAtendimentoMet());
        }
        else{
            jTextFieldServiceAvg.setEnabled(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonOk = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jCheckBoxPerda = new javax.swing.JCheckBox();
        jCheckBoxServiceAvg = new javax.swing.JCheckBox();
        jCheckBoxQueueAvg = new javax.swing.JCheckBox();
        jTextFieldServiceAvg = new javax.swing.JTextField();
        jTextFieldQueueAvg = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldEvento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(Main.languageResource.getString("Metrics")); // NOI18N
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText(Main.languageResource.getString("Select the metrics that do  you want to display as results:")); // NOI18N

        jButtonOk.setText(Main.languageResource.getString("OK")); // NOI18N
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonBack.setText(Main.languageResource.getString("Back")); // NOI18N
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jCheckBoxPerda.setText(Main.languageResource.getString("Loss of events")); // NOI18N
        jCheckBoxPerda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPerdaActionPerformed(evt);
            }
        });

        jCheckBoxServiceAvg.setText(Main.languageResource.getString("Average of events service time")); // NOI18N
        jCheckBoxServiceAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxServiceAvgActionPerformed(evt);
            }
        });

        jCheckBoxQueueAvg.setText(Main.languageResource.getString("Average of queue events time")); // NOI18N
        jCheckBoxQueueAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxQueueAvgActionPerformed(evt);
            }
        });

        jTextFieldServiceAvg.setText("Ex: seconds");
        jTextFieldServiceAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldServiceAvgActionPerformed(evt);
            }
        });
        jTextFieldServiceAvg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                apagar(evt);
            }
        });

        jTextFieldQueueAvg.setText("Ex: seconds");
        jTextFieldQueueAvg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                apagarQueue(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText(Main.languageResource.getString("Give a meaningful name that can represent the events in your simulation")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText(Main.languageResource.getString("Measurement Unit ")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163)
                .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jTextFieldEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBoxServiceAvg)
                        .addComponent(jCheckBoxPerda)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jCheckBoxQueueAvg)
                            .addGap(171, 171, 171)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jTextFieldServiceAvg, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldQueueAvg, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBack)
                    .addComponent(jButtonOk))
                .addGap(46, 46, 46))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jTextFieldEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBoxPerda)
                    .addGap(8, 8, 8)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBoxServiceAvg)
                        .addComponent(jTextFieldServiceAvg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBoxQueueAvg)
                        .addComponent(jTextFieldQueueAvg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(98, 98, 98)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        jTextFieldQueueAvg.setText(jTextFieldQueueAvg.getText().trim());
        jTextFieldServiceAvg.setText(jTextFieldServiceAvg.getText().trim());
        jTextFieldEvento.setText(jTextFieldEvento.getText().trim());
        if ((jCheckBoxServiceAvg.isSelected() && jTextFieldServiceAvg.getText().equals("")) || (jCheckBoxQueueAvg.isSelected()
                && jTextFieldQueueAvg.getText().equals("")) || (jTextFieldEvento.getText().equals(""))) {
            JOptionPane.showMessageDialog(this, Main.languageResource.getString("Complete the text areas of the selected items to continue"), Main.languageResource.getString("Message"), 1);
        } else {
            ListasArmazenamento.setEvent(jTextFieldEvento.getText());
            if (jCheckBoxPerda.isSelected()) {
                ListasArmazenamento.setPerda(true);
            }
            if (jCheckBoxServiceAvg.isSelected()) {
                ListasArmazenamento.setAtendimento(true);
                jTextFieldServiceAvg.setText(jTextFieldServiceAvg.getText().replaceAll(" ", ""));
                ListasArmazenamento.setAtendimentoMet(jTextFieldServiceAvg.getText());
            }
            if (jCheckBoxQueueAvg.isSelected()) {
                ListasArmazenamento.setFila(true);
                jTextFieldQueueAvg.setText(jTextFieldQueueAvg.getText().replaceAll(" ", ""));
                ListasArmazenamento.setFilaMet(jTextFieldQueueAvg.getText());
            }
            Encerramento dialog = new Encerramento(stringCaminho);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            this.setVisible(false);
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        Falhas dialog = new Falhas(stringCaminho);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                System.exit(0);
            }
        });
        this.setVisible(false);
        dialog.setVisible(true);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jCheckBoxPerdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPerdaActionPerformed
        // TODO add your handling code here:
        if (!jCheckBoxPerda.isSelected()) {
            ListasArmazenamento.setPerda(false);
        } else {
            ListasArmazenamento.setPerda(true);
        }
    }//GEN-LAST:event_jCheckBoxPerdaActionPerformed

    private void jCheckBoxServiceAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxServiceAvgActionPerformed
        // TODO add your handling code here:
        if (!jCheckBoxServiceAvg.isSelected()) {
            ListasArmazenamento.setAtendimento(false);
            jTextFieldServiceAvg.setEnabled(false);
        } else {
            ListasArmazenamento.setAtendimento(true);
            jTextFieldServiceAvg.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBoxServiceAvgActionPerformed

    private void jCheckBoxQueueAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxQueueAvgActionPerformed
        // TODO add your handling code here:
        if (!jCheckBoxQueueAvg.isSelected()){
            ListasArmazenamento.setFila(false);
            jTextFieldQueueAvg.setEnabled(false);
        }
        else{
            ListasArmazenamento.setFila(true);
            jTextFieldQueueAvg.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBoxQueueAvgActionPerformed

    private void jTextFieldServiceAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldServiceAvgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldServiceAvgActionPerformed

    private void apagar(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apagar
        // TODO add your handling code here:
        if(jTextFieldServiceAvg.getText().equals("Ex: seconds"))
            jTextFieldServiceAvg.setText("");
    }//GEN-LAST:event_apagar

    private void apagarQueue(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apagarQueue
        // TODO add your handling code here:
        if(jTextFieldQueueAvg.getText().equals("Ex: seconds"))
            jTextFieldQueueAvg.setText("");
    }//GEN-LAST:event_apagarQueue
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JCheckBox jCheckBoxPerda;
    private javax.swing.JCheckBox jCheckBoxQueueAvg;
    private javax.swing.JCheckBox jCheckBoxServiceAvg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldEvento;
    private javax.swing.JTextField jTextFieldQueueAvg;
    private javax.swing.JTextField jTextFieldServiceAvg;
    // End of variables declaration//GEN-END:variables
}
