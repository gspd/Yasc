/* ==========================================================
 * iSPD : iconic Simulator of Parallel and Distributed System
 * ==========================================================
 *
 * (C) Copyright 2010-2014, by Grupo de pesquisas em Sistemas Paralelos e Distribuídos da Unesp (GSPD).
 *
 * Project Info:  http://gspd.dcce.ibilce.unesp.br/
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. 
 * Other names may be trademarks of their respective owners.]
 *
 * ---------------
 * SelecionaCargas.java
 * ---------------
 * (C) Copyright 2014, by Grupo de pesquisas em Sistemas Paralelos e Distribuídos da Unesp (GSPD).
 *
 * Original Author:  Denison Menezes (for GSPD);
 * Contributor(s):   -;
 *
 * Changes
 * -------
 * Created on 31/05/2011
 * 09-Set-2014 : Version 2.0;
 *
 */
package ispd.gui;

import ispd.arquivo.xml.TraceXML;
import ispd.gui.auxiliar.FiltroDeArquivos;
import ispd.motor.carga.CargaList;
import ispd.motor.carga.CargaRandom;
import ispd.motor.carga.CargaForNode;
import ispd.motor.carga.CargaTrace;
import ispd.motor.carga.GerarCarga;
import java.io.File;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.ResourceBundle;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author denison
 */
public class SelecionaCargas extends javax.swing.JDialog {

    private FiltroDeArquivos filtro2;
    private File file;
    private final Vector<Vector> dagLinha;
    private final Vector dagColuna;

    /**
     * Creates new form SelecionaCargas
     */
    public SelecionaCargas(java.awt.Frame parent, boolean modal, Object[] users, Object[] masters, GerarCarga gerarcarga, ResourceBundle palavras) {
        super(parent, modal);
        this.palavras = palavras;
        this.usuarios = new Vector<String>();
        for (Object object : users) {
            usuarios.add((String) object);
        }
        this.escalonadores = new Vector<String>();
        for (Object object : masters) {
            escalonadores.add((String) object);
        }
        this.carga = gerarcarga;
        this.tabelaLinha = new Vector<Vector>();
        this.tabelaColuna.add(palavras.getString("Application"));
        this.tabelaColuna.add(palavras.getString("User"));
        this.tabelaColuna.add(palavras.getString("Scheduler"));
        this.tabelaColuna.add(palavras.getString("Tasks"));
        this.tabelaColuna.add(palavras.getString("Maximum computing"));
        this.tabelaColuna.add(palavras.getString("Minimum computing"));
        this.tabelaColuna.add(palavras.getString("Maximum communication"));
        this.tabelaColuna.add(palavras.getString("Minimum communication"));
        this.dagLinha = new Vector<Vector>();
        this.dagColuna = new Vector(5);
        this.dagColuna.add(palavras.getString("Application"));
        this.dagColuna.add(palavras.getString("User"));
        this.dagColuna.add(palavras.getString("Scheduler"));
        this.dagColuna.add(palavras.getString("Tasks"));
        this.dagColuna.add("DAG");
        filtro = new FiltroDeArquivos("Workload Model of Sumulation", "wmsx", true);
        String[] extenc = {"swf", "gwf"};
        filtro2 = new FiltroDeArquivos("External Trace Files", extenc, true);
        initComponents();
        this.setValores(gerarcarga);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelRandom = new javax.swing.JPanel();
        jLabelNumberOfTasks = new javax.swing.JLabel();
        jSpinnerNumTarefas = new javax.swing.JSpinner();
        jSpinnerMinComputacao = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerMinComunicacao = new javax.swing.JSpinner();
        jSpinnerTimeOfArrival = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinnerAverageComputacao = new javax.swing.JSpinner();
        jSpinnerAverageComunicacao = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerMaxComputacao = new javax.swing.JSpinner();
        jSpinnerMaxComunicacao = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jSpinnerProbabilityComputacao = new javax.swing.JSpinner();
        jSpinnerProbabilityComunicacao = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanelForNode = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxUsers = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxEscalonadores = new javax.swing.JComboBox();
        jLabelNumberOfTasks1 = new javax.swing.JLabel();
        jSpinnerNumTarefasNo = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSpinnerMaxCompNo = new javax.swing.JSpinner();
        jSpinnerMinCompNo = new javax.swing.JSpinner();
        jSpinnerMinComuNo = new javax.swing.JSpinner();
        jSpinnerMaxComuNo = new javax.swing.JSpinner();
        jButtonAddTabela = new javax.swing.JButton();
        jScrollPaneTabela = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButtonAddTabela1 = new javax.swing.JButton();
        jPanelTrace = new javax.swing.JPanel();
        jRadioButtonwmsx = new javax.swing.JRadioButton();
        jRadioButtonConvTrace = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanelConvertTrace = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTextFieldCaminhoTrace = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextNotifTrace = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jOpenTrace = new javax.swing.JFileChooser();
        jPanelSelecionaTrace = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextNotification = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButtonOpenWMSX = new javax.swing.JButton();
        jTextFieldCaminhoWMS = new javax.swing.JTextField();
        jFileExternalTrace = new javax.swing.JFileChooser();
        jPanelModo = new javax.swing.JPanel();
        jRadioButtonTraces = new javax.swing.JRadioButton();
        jRadioButtonForNode = new javax.swing.JRadioButton();
        jRadioButtonRandom = new javax.swing.JRadioButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonAddUser = new javax.swing.JButton();
        jScrollPaneSelecionado = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButtonOK1 = new javax.swing.JButton();

        jPanelRandom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelRandom.setMaximumSize(null);
        jPanelRandom.setPreferredSize(new java.awt.Dimension(500, 300));

        jLabelNumberOfTasks.setText(palavras.getString("Number of tasks")); // NOI18N

        jSpinnerNumTarefas.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerMinComputacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel1.setText(palavras.getString("Computational size")); // NOI18N

        jLabel2.setText(palavras.getString("Communication size")); // NOI18N

        jLabel3.setText(palavras.getString("Time of arrival")); // NOI18N

        jSpinnerMinComunicacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerTimeOfArrival.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel4.setText(palavras.getString("Minimum")); // NOI18N

        jLabel5.setText(palavras.getString("Average")); // NOI18N

        jSpinnerAverageComputacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerAverageComunicacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel6.setText(palavras.getString("Maximum")); // NOI18N

        jSpinnerMaxComputacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jSpinnerMaxComunicacao.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel7.setText(palavras.getString("Probability")); // NOI18N

        jSpinnerProbabilityComputacao.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jSpinnerProbabilityComunicacao.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jLabel9.setText(palavras.getString("MFLOPS")); // NOI18N

        jLabel10.setText(palavras.getString("Mbits")); // NOI18N

        jLabel11.setText(palavras.getString("Seconds")); // NOI18N

        javax.swing.GroupLayout jPanelRandomLayout = new javax.swing.GroupLayout(jPanelRandom);
        jPanelRandom.setLayout(jPanelRandomLayout);
        jPanelRandomLayout.setHorizontalGroup(
            jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRandomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelNumberOfTasks, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerNumTarefas, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerTimeOfArrival)
                    .addComponent(jSpinnerMinComunicacao)
                    .addComponent(jSpinnerMinComputacao)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRandomLayout.createSequentialGroup()
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerAverageComunicacao)
                            .addComponent(jSpinnerAverageComputacao)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerMaxComunicacao)
                            .addComponent(jSpinnerMaxComputacao)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerProbabilityComunicacao)
                            .addComponent(jSpinnerProbabilityComputacao, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)))
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelRandomLayout.setVerticalGroup(
            jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRandomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelRandomLayout.createSequentialGroup()
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNumberOfTasks)
                            .addComponent(jSpinnerNumTarefas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(15, 15, 15)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jSpinnerMinComputacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jSpinnerMinComunicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelRandomLayout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(15, 15, 15)
                            .addComponent(jSpinnerMaxComputacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSpinnerMaxComunicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelRandomLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(15, 15, 15)
                            .addComponent(jSpinnerAverageComputacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSpinnerAverageComunicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelRandomLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(15, 15, 15)
                            .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerProbabilityComputacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerProbabilityComunicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)))))
                .addGap(18, 18, 18)
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jSpinnerTimeOfArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jPanelForNode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelForNode.setMaximumSize(null);
        jPanelForNode.setPreferredSize(new java.awt.Dimension(500, 300));

        jLabel8.setText(palavras.getString("User")); // NOI18N

        jComboBoxUsers.setModel(new DefaultComboBoxModel(usuarios));

        jLabel12.setText(palavras.getString("Scheduler")); // NOI18N

        jComboBoxEscalonadores.setModel(new DefaultComboBoxModel(escalonadores));

        jLabelNumberOfTasks1.setText(palavras.getString("Number of tasks")); // NOI18N

        jSpinnerNumTarefasNo.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel13.setText(palavras.getString("Computational")); // NOI18N

        jLabel14.setText(palavras.getString("Communication")); // NOI18N

        jSpinnerMaxCompNo.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jSpinnerMinCompNo.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jSpinnerMinComuNo.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jSpinnerMaxComuNo.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jButtonAddTabela.setText(palavras.getString("Add")); // NOI18N
        jButtonAddTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTabelaActionPerformed(evt);
            }
        });

        jTable1.setModel(new DefaultTableModel(this.tabelaLinha,this.tabelaColuna));
        jScrollPaneTabela.setViewportView(jTable1);

        jLabel15.setText(palavras.getString("Maximum")); // NOI18N

        jLabel16.setText(palavras.getString("Minimum")); // NOI18N

        jButtonAddTabela1.setText(palavras.getString("Remove")); // NOI18N
        jButtonAddTabela1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTabela1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelForNodeLayout = new javax.swing.GroupLayout(jPanelForNode);
        jPanelForNode.setLayout(jPanelForNodeLayout);
        jPanelForNodeLayout.setHorizontalGroup(
            jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPaneTabela, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelForNodeLayout.createSequentialGroup()
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxUsers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxEscalonadores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12)))
                            .addComponent(jButtonAddTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelNumberOfTasks1))
                            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jSpinnerNumTarefasNo))
                            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAddTabela1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerMaxCompNo, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jSpinnerMinCompNo)))
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerMaxComuNo)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSpinnerMinComuNo))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelForNodeLayout.setVerticalGroup(
            jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelForNodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(jLabelNumberOfTasks1)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEscalonadores, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerNumTarefasNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jSpinnerMaxCompNo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerMaxComuNo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelForNodeLayout.createSequentialGroup()
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jSpinnerMinCompNo, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(jSpinnerMinComuNo, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanelForNodeLayout.createSequentialGroup()
                        .addGroup(jPanelForNodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAddTabela)
                            .addComponent(jButtonAddTabela1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPaneTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelTrace.setPreferredSize(new java.awt.Dimension(500, 300));

        jRadioButtonwmsx.setSelected(true);
        jRadioButtonwmsx.setText(palavras.getString("Open an existing iSPD trace file")); // NOI18N
        jRadioButtonwmsx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonwmsxActionPerformed(evt);
            }
        });

        jRadioButtonConvTrace.setText(palavras.getString("Convert an external trace file to iSPD trace format")); // NOI18N
        jRadioButtonConvTrace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonConvTraceActionPerformed(evt);
            }
        });

        jLabel19.setText(palavras.getString("Select the desired option")); // NOI18N

        jButton2.setText(palavras.getString("Next")+" >>"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTraceLayout = new javax.swing.GroupLayout(jPanelTrace);
        jPanelTrace.setLayout(jPanelTraceLayout);
        jPanelTraceLayout.setHorizontalGroup(
            jPanelTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTraceLayout.createSequentialGroup()
                .addGroup(jPanelTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTraceLayout.createSequentialGroup()
                        .addGroup(jPanelTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTraceLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel19))
                            .addGroup(jPanelTraceLayout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(jPanelTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonConvTrace)
                                    .addComponent(jRadioButtonwmsx))))
                        .addGap(0, 48, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTraceLayout.createSequentialGroup()
                        .addContainerGap(422, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanelTraceLayout.setVerticalGroup(
            jPanelTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTraceLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel19)
                .addGap(62, 62, 62)
                .addComponent(jRadioButtonwmsx)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonConvTrace)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(44, 44, 44))
        );

        jPanelConvertTrace.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelConvertTrace.setPreferredSize(new java.awt.Dimension(500, 300));

        jLabel18.setText(palavras.getString("Select a external format trace file to convert:")); // NOI18N

        jButton1.setText(palavras.getString("Open")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel17.setText(palavras.getString("Notifications")); // NOI18N

        jButton4.setText(palavras.getString("Convert")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextFieldCaminhoTrace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCaminhoTraceActionPerformed(evt);
            }
        });

        jTextNotifTrace.setColumns(20);
        jTextNotifTrace.setRows(5);
        jTextNotifTrace.setPreferredSize(new java.awt.Dimension(164, 74));
        jScrollPane2.setViewportView(jTextNotifTrace);

        jButton5.setText("<< "+palavras.getString("Previous")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConvertTraceLayout = new javax.swing.GroupLayout(jPanelConvertTrace);
        jPanelConvertTrace.setLayout(jPanelConvertTraceLayout);
        jPanelConvertTraceLayout.setHorizontalGroup(
            jPanelConvertTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConvertTraceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConvertTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addGroup(jPanelConvertTraceLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCaminhoTrace, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanelConvertTraceLayout.setVerticalGroup(
            jPanelConvertTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConvertTraceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelConvertTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextFieldCaminhoTrace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addGap(65, 65, 65))
        );

        jOpenTrace.setAcceptAllFileFilterUsed(false);
        jOpenTrace.setFileFilter(filtro);
        jOpenTrace.setFileView(new javax.swing.filechooser.FileView() {@Override
            public Icon getIcon(File f) {
                String ext = null;
                String s = f.getName();
                int i = s.lastIndexOf('.');
                if (i > 0 && i < s.length() - 1) {
                    ext = s.substring(i + 1).toLowerCase();
                }
                if (ext != null) {
                    if (ext.equals("wmsx")) {
                        java.net.URL imgURL = JPrincipal.class.getResource("imagens/Logo_iSPD_25.png");
                        if (imgURL != null) {
                            return new ImageIcon(imgURL);
                        }
                    }
                }
                return null;
            }});

            jPanelSelecionaTrace.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
            jPanelSelecionaTrace.setPreferredSize(new java.awt.Dimension(500, 300));

            jLabel20.setText(palavras.getString("Select an iSPD trace file to open:")); // NOI18N

            jLabel21.setText(palavras.getString("Notifications")); // NOI18N

            jTextNotification.setColumns(20);
            jTextNotification.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
            jTextNotification.setRows(5);
            jTextNotification.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jScrollPane1.setViewportView(jTextNotification);

            jButton3.setText("<< "+palavras.getString("Previous")); // NOI18N
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            jButtonOpenWMSX.setText(palavras.getString("Open")); // NOI18N
            jButtonOpenWMSX.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonOpenWMSXActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanelSelecionaTraceLayout = new javax.swing.GroupLayout(jPanelSelecionaTrace);
            jPanelSelecionaTrace.setLayout(jPanelSelecionaTraceLayout);
            jPanelSelecionaTraceLayout.setHorizontalGroup(
                jPanelSelecionaTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelSelecionaTraceLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelSelecionaTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel21)
                        .addGroup(jPanelSelecionaTraceLayout.createSequentialGroup()
                            .addComponent(jButtonOpenWMSX, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldCaminhoWMS, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            jPanelSelecionaTraceLayout.setVerticalGroup(
                jPanelSelecionaTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelSelecionaTraceLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(jLabel20)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelSelecionaTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonOpenWMSX)
                        .addComponent(jTextFieldCaminhoWMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel21)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton3)
                    .addContainerGap(31, Short.MAX_VALUE))
            );

            jFileExternalTrace.setAcceptAllFileFilterUsed(false);
            jFileExternalTrace.setFileFilter(filtro2);

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            setTitle(palavras.getString("Random Workloads")); // NOI18N
            setMinimumSize(new java.awt.Dimension(550, 450));
            setResizable(false);

            jPanelModo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), palavras.getString("Insertion mode for the workloads"))); // NOI18N
            jPanelModo.setMaximumSize(new java.awt.Dimension(500, 60));
            jPanelModo.setMinimumSize(new java.awt.Dimension(500, 60));
            jPanelModo.setPreferredSize(new java.awt.Dimension(500, 60));

            jRadioButtonTraces.setText(palavras.getString("Traces")); // NOI18N
            jRadioButtonTraces.setOpaque(false);
            jRadioButtonTraces.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButtonTracesActionPerformed(evt);
                }
            });

            jRadioButtonForNode.setText(palavras.getString("For each node")); // NOI18N
            jRadioButtonForNode.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButtonForNodeActionPerformed(evt);
                }
            });

            jRadioButtonRandom.setSelected(true);
            jRadioButtonRandom.setText(palavras.getString("Random")); // NOI18N
            jRadioButtonRandom.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRadioButtonRandomActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanelModoLayout = new javax.swing.GroupLayout(jPanelModo);
            jPanelModo.setLayout(jPanelModoLayout);
            jPanelModoLayout.setHorizontalGroup(
                jPanelModoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelModoLayout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(jRadioButtonRandom)
                    .addGap(37, 37, 37)
                    .addComponent(jRadioButtonForNode, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(31, 31, 31)
                    .addComponent(jRadioButtonTraces, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            jPanelModoLayout.setVerticalGroup(
                jPanelModoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelModoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelModoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonRandom)
                        .addComponent(jRadioButtonTraces, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButtonForNode))
                    .addGap(9, 9, 9))
            );

            jButtonCancelar.setText(palavras.getString("Cancel")); // NOI18N
            jButtonCancelar.setMaximumSize(new java.awt.Dimension(80, 30));
            jButtonCancelar.setMinimumSize(new java.awt.Dimension(80, 30));
            jButtonCancelar.setPreferredSize(new java.awt.Dimension(80, 30));
            jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonCancelarActionPerformed(evt);
                }
            });

            jButtonAddUser.setText(palavras.getString("Add user")); // NOI18N
            jButtonAddUser.setPreferredSize(new java.awt.Dimension(80, 30));
            jButtonAddUser.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonAddUserActionPerformed(evt);
                }
            });

            jScrollPaneSelecionado.setPreferredSize(new java.awt.Dimension(500, 300));

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 498, Short.MAX_VALUE)
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 309, Short.MAX_VALUE)
            );

            jScrollPaneSelecionado.setViewportView(jPanel1);

            jButtonOK1.setText(palavras.getString("OK")); // NOI18N
            jButtonOK1.setPreferredSize(new java.awt.Dimension(80, 30));
            jButtonOK1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonOK1ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(jButtonAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(jButtonOK1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPaneSelecionado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelModo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelModo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPaneSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonOK1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap())
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonRandomActionPerformed
        setTipo(GerarCarga.RANDOM);
    }//GEN-LAST:event_jRadioButtonRandomActionPerformed

    private void jRadioButtonForNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonForNodeActionPerformed
        setTipo(GerarCarga.FORNODE);
    }//GEN-LAST:event_jRadioButtonForNodeActionPerformed

    private void jRadioButtonTracesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTracesActionPerformed
        setTipo(GerarCarga.TRACE);
    }//GEN-LAST:event_jRadioButtonTracesActionPerformed

    private void jButtonAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUserActionPerformed
        // TODO add your handling code here:
        String newUser = JOptionPane.showInputDialog(this, palavras.getString("Enter the name"), palavras.getString("Add user"), JOptionPane.QUESTION_MESSAGE);
        if (newUser != null && !newUser.equals("") && !usuarios.contains(newUser)) {
            usuarios.add(newUser);
        }
    }//GEN-LAST:event_jButtonAddUserActionPerformed

    private void jButtonAddTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTabelaActionPerformed
        // TODO add your handling code here:
        Vector linha = new Vector(8);
        linha.add("app" + tabelaIndex);
        tabelaIndex++;
        linha.add(jComboBoxUsers.getSelectedItem());
        linha.add(jComboBoxEscalonadores.getSelectedItem());
        linha.add(jSpinnerNumTarefasNo.getValue());
        linha.add(jSpinnerMaxCompNo.getValue());
        linha.add(jSpinnerMinCompNo.getValue());
        linha.add(jSpinnerMaxComuNo.getValue());
        linha.add(jSpinnerMinComuNo.getValue());
        tabelaLinha.add(linha);
        jScrollPaneTabela.setViewportView(jTable1);
    }//GEN-LAST:event_jButtonAddTabelaActionPerformed

    private void jButtonOK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOK1ActionPerformed
        // TODO add your handling code here:
        if (jRadioButtonRandom.isSelected()) {
            try {
                int numTaref = (Integer) jSpinnerNumTarefas.getValue();
                int minComp = (Integer) jSpinnerMinComputacao.getValue();
                int maxComp = (Integer) jSpinnerMaxComputacao.getValue();
                int aveComp = (Integer) jSpinnerAverageComputacao.getValue();
                double probComp = Double.parseDouble(jSpinnerProbabilityComputacao.getValue().toString());
                int minComun = (Integer) jSpinnerMinComunicacao.getValue();
                int maxComun = (Integer) jSpinnerMaxComunicacao.getValue();
                int aveComun = (Integer) jSpinnerAverageComunicacao.getValue();
                double probComun = Double.parseDouble(jSpinnerProbabilityComunicacao.getValue().toString());
                int timeArriv = (Integer) jSpinnerTimeOfArrival.getValue();
                this.carga = new CargaRandom(numTaref, minComp, maxComp, aveComp, probComp, minComun, maxComun, aveComun, probComun, timeArriv);
            } catch (Exception ex) {
                Logger.getLogger(SelecionaCargas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButtonForNode.isSelected()) {
            try {
                List<GerarCarga> configuracaoNo = new ArrayList(tabelaLinha.size());
                for (Vector item : tabelaLinha) {
                    String aplicacao = item.get(0).toString();
                    String proprietario = item.get(1).toString();
                    String escalonador = item.get(2).toString();
                    int numeroTarefas = Integer.parseInt(item.get(3).toString());
                    double maxComputacao = Double.parseDouble(item.get(4).toString());
                    double minComputacao = Double.parseDouble(item.get(5).toString());
                    double maxComunicacao = Double.parseDouble(item.get(6).toString());
                    double minComunicacao = Double.parseDouble(item.get(7).toString());
                    GerarCarga novoItem = new CargaForNode(aplicacao, proprietario, escalonador, numeroTarefas, maxComputacao, minComputacao, maxComunicacao, minComunicacao);
                    configuracaoNo.add(novoItem);
                }
                this.carga = new CargaList(configuracaoNo, GerarCarga.FORNODE);
            } catch (Exception ex) {
                Logger.getLogger(SelecionaCargas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jRadioButtonTraces.isSelected()) {
            //configura a carga apartir do arquivo aberto..
            this.carga = new CargaTrace(file, NumTaskTrace, TipoTrace);
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButtonOK1ActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAddTabela1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTabela1ActionPerformed
        int linha = jTable1.getSelectedRow();
        if (linha >= 0 && linha < tabelaLinha.size()) {
            tabelaLinha.remove(linha);
        }
        jScrollPaneTabela.setViewportView(jTable1);
    }//GEN-LAST:event_jButtonAddTabela1ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
    try {
        TraceXML interpret = new TraceXML(jTextFieldCaminhoTrace.getText());
        try {//inicia a conversão do arquivo
            double t1 = System.currentTimeMillis();
            interpret.convert();
            double t2 = System.currentTimeMillis();
            System.out.println((t2 - t1) / 1000);
            file = new File(interpret.getSaida());
            NumTaskTrace = interpret.getNum_Tasks();
            TipoTrace = interpret.getTipo();
        } catch (Exception e) {
            jTextNotifTrace.setText(palavras.getString("Badly formatted file"));
        }
        jTextNotifTrace.setText(interpret.toString());
    } catch (Exception e) {
        jTextNotifTrace.setText(palavras.getString("There is no file selected"));
    };
}//GEN-LAST:event_jButton4ActionPerformed

private void jTextFieldCaminhoTraceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCaminhoTraceActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextFieldCaminhoTraceActionPerformed

    private void jRadioButtonwmsxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonwmsxActionPerformed
        // TODO add your handling code here:
        if (jRadioButtonwmsx.isSelected()) {
            jRadioButtonwmsx.setSelected(true);
            jRadioButtonConvTrace.setSelected(false);
            file = null;
            jTextFieldCaminhoTrace.setText("");
            jTextNotifTrace.setText("");
            NumTaskTrace = 0;

        } else if (jRadioButtonConvTrace.isSelected()) {
            jRadioButtonConvTrace.setSelected(true);
            jRadioButtonwmsx.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButtonwmsxActionPerformed

    private void jRadioButtonConvTraceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonConvTraceActionPerformed
        // TODO add your handling code here:
        if (jRadioButtonConvTrace.isSelected()) {
            jRadioButtonwmsx.setSelected(false);
            jRadioButtonConvTrace.setSelected(true);
            file = null;
            jTextFieldCaminhoWMS.setText("");
            jTextNotification.setText("");
            NumTaskTrace = 0;
        } else {
            jRadioButtonConvTrace.setSelected(false);
            jRadioButtonwmsx.setSelected(true);
        }
    }//GEN-LAST:event_jRadioButtonConvTraceActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jRadioButtonwmsx.isSelected()) {
            jScrollPaneSelecionado.setViewportView(jPanelSelecionaTrace);
        } else {
            jScrollPaneSelecionado.setViewportView(jPanelConvertTrace);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jScrollPaneSelecionado.setViewportView(jPanelTrace);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jScrollPaneSelecionado.setViewportView(jPanelTrace);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButtonOpenWMSXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenWMSXActionPerformed
        // TODO add your handling code here:
        filtro.setDescricao(palavras.getString("Workload Model of Simulation"));
        String ext = ".wmsx";
        filtro.setExtensao(ext);
        jOpenTrace.setAcceptAllFileFilterUsed(false);
        int returnVal = jOpenTrace.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = jOpenTrace.getSelectedFile();
            jTextFieldCaminhoWMS.setText(file.getAbsolutePath());
            TraceXML interpret = new TraceXML(file.getAbsolutePath());
            jTextNotification.setText(interpret.LerCargaWMS());
            NumTaskTrace = interpret.getNum_Tasks();
            TipoTrace = interpret.getTipo();

            //This is where a real application would open the file.
            //Abrir arquivo.

        }
    }//GEN-LAST:event_jButtonOpenWMSXActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        filtro2.setDescricao(palavras.getString("External Trace File"));
        String[] exts = {".swf", ".gwf"};
        filtro2.setExtensao(exts);
        jFileExternalTrace.setAcceptAllFileFilterUsed(false);
        int returnVal = jFileExternalTrace.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = jFileExternalTrace.getSelectedFile();
            jTextFieldCaminhoTrace.setText(file.getAbsolutePath());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonAddTabela;
    private javax.swing.JButton jButtonAddTabela1;
    private javax.swing.JButton jButtonAddUser;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonOK1;
    private javax.swing.JButton jButtonOpenWMSX;
    private javax.swing.JComboBox jComboBoxEscalonadores;
    private javax.swing.JComboBox jComboBoxUsers;
    private javax.swing.JFileChooser jFileExternalTrace;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelNumberOfTasks;
    private javax.swing.JLabel jLabelNumberOfTasks1;
    private javax.swing.JFileChooser jOpenTrace;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelConvertTrace;
    private javax.swing.JPanel jPanelForNode;
    private javax.swing.JPanel jPanelModo;
    private javax.swing.JPanel jPanelRandom;
    private javax.swing.JPanel jPanelSelecionaTrace;
    private javax.swing.JPanel jPanelTrace;
    private javax.swing.JRadioButton jRadioButtonConvTrace;
    private javax.swing.JRadioButton jRadioButtonForNode;
    private javax.swing.JRadioButton jRadioButtonRandom;
    private javax.swing.JRadioButton jRadioButtonTraces;
    private javax.swing.JRadioButton jRadioButtonwmsx;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPaneSelecionado;
    private javax.swing.JScrollPane jScrollPaneTabela;
    private javax.swing.JSpinner jSpinnerAverageComputacao;
    private javax.swing.JSpinner jSpinnerAverageComunicacao;
    private javax.swing.JSpinner jSpinnerMaxCompNo;
    private javax.swing.JSpinner jSpinnerMaxComputacao;
    private javax.swing.JSpinner jSpinnerMaxComuNo;
    private javax.swing.JSpinner jSpinnerMaxComunicacao;
    private javax.swing.JSpinner jSpinnerMinCompNo;
    private javax.swing.JSpinner jSpinnerMinComputacao;
    private javax.swing.JSpinner jSpinnerMinComuNo;
    private javax.swing.JSpinner jSpinnerMinComunicacao;
    private javax.swing.JSpinner jSpinnerNumTarefas;
    private javax.swing.JSpinner jSpinnerNumTarefasNo;
    private javax.swing.JSpinner jSpinnerProbabilityComputacao;
    private javax.swing.JSpinner jSpinnerProbabilityComunicacao;
    private javax.swing.JSpinner jSpinnerTimeOfArrival;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldCaminhoTrace;
    private javax.swing.JTextField jTextFieldCaminhoWMS;
    private javax.swing.JTextArea jTextNotifTrace;
    private javax.swing.JTextArea jTextNotification;
    // End of variables declaration//GEN-END:variables
    private FiltroDeArquivos filtro;
    private GerarCarga carga;
    private Vector<String> usuarios;
    private Vector<String> escalonadores;
    private Vector<Vector> tabelaLinha;
    private Vector<String> tabelaColuna = new Vector<String>(7);
    private int tabelaIndex = 0;
    private ResourceBundle palavras;
    private int NumTaskTrace = 0;
    private String TipoTrace = "";

    GerarCarga getCargasConfiguracao() {
        return carga;
    }

    /**
     * Carrega os valores do gerador de cargas nos componentes da janela
     *
     * @param gerarcarga
     */
    private void setValores(GerarCarga gerarcarga) {
        if (gerarcarga != null) {
            switch (gerarcarga.getTipo()) {
                case GerarCarga.RANDOM:
                    CargaRandom random = (CargaRandom) gerarcarga;
                    jSpinnerNumTarefas.setValue(random.getNumeroTarefas());
                    jSpinnerMinComputacao.setValue(random.getMinComputacao());
                    jSpinnerMaxComputacao.setValue(random.getMaxComputacao());
                    jSpinnerAverageComputacao.setValue(random.getAverageComputacao());
                    jSpinnerProbabilityComputacao.setValue(random.getProbabilityComputacao());
                    jSpinnerMinComunicacao.setValue(random.getMinComunicacao());
                    jSpinnerMaxComunicacao.setValue(random.getMaxComunicacao());
                    jSpinnerAverageComunicacao.setValue(random.getAverageComunicacao());
                    jSpinnerProbabilityComunicacao.setValue(random.getProbabilityComunicacao());
                    jSpinnerTimeOfArrival.setValue(random.getTimeToArrival());
                    setTipo(GerarCarga.RANDOM);
                    break;
                case GerarCarga.FORNODE:
                    CargaList nodes = (CargaList) gerarcarga;
                    for (GerarCarga item : nodes.getList()) {
                        CargaForNode node = (CargaForNode) item;
                        this.tabelaLinha.add(node.toVector());
                    }
                    this.tabelaIndex = tabelaLinha.size();
                    setTipo(GerarCarga.FORNODE);
                    break;
                case GerarCarga.TRACE:
                    CargaTrace trace = (CargaTrace) gerarcarga;
                    file = trace.getFile();
                    TipoTrace = trace.getTraceType();
                    NumTaskTrace = trace.getNumberTasks();
                    jTextFieldCaminhoWMS.setText(file.getAbsolutePath());
                    jTextNotification.setText("File " + file.getName() + "\n"
                            + "\t- File format: " + TipoTrace + "\n"
                            + "\t- File has a workload of " + NumTaskTrace + " tasks");
                    setTipo(GerarCarga.TRACE);
                    break;
            }
        } else {
            setTipo(GerarCarga.RANDOM);
        }
    }

    public HashSet<String> getUsuarios() {
        return new HashSet<String>(usuarios);
    }

    /**
     * Apresenta na janela jPanel e seta valores dos jRadioButton de acordo com
     * tipo informado
     *
     * @param tipo jRadioButton selecionado
     */
    private void setTipo(int tipo) {
        switch (tipo) {
            case GerarCarga.RANDOM:
                jRadioButtonForNode.setSelected(false);
                jRadioButtonTraces.setSelected(false);
                jRadioButtonRandom.setSelected(true);
                jScrollPaneSelecionado.setViewportView(jPanelRandom);
                break;
            case GerarCarga.FORNODE:
                jRadioButtonForNode.setSelected(true);
                jRadioButtonTraces.setSelected(false);
                jRadioButtonRandom.setSelected(false);
                jScrollPaneSelecionado.setViewportView(jPanelForNode);
                break;
            case GerarCarga.TRACE:
                jRadioButtonForNode.setSelected(false);
                jRadioButtonTraces.setSelected(true);
                jRadioButtonRandom.setSelected(false);
                jScrollPaneSelecionado.setViewportView(jPanelTrace);
                break;
        }
    }
}
